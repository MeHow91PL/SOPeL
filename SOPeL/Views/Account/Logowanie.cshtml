@model SOPeL.ViewModels.LoginViewModel

<!DOCTYPE html>
<html lang="pl">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    @Styles.Render("~/Content/reset")
    @Styles.Render("~/Content/themes/base/css")
    @Styles.Render("~/Content/bootstrap")
    @Styles.Render("~/Content/Layout")


</head>
<body style="padding: 0" onload="ustawFocus()">
    <div id="tlo">
        <div class="wysrodkujCentralnie">
            <div id="kartaLogowania" class="kontenerOkienka">
                <form id="formularzKartyLogowania" class="form-horizontal" method="post" action="@Url.Action("Logowanie","Account")">
                    @Html.AntiForgeryToken()
                    @Html.Hidden("ReturnUrl", (string)ViewBag.ReturnUrl)
                    @{
                        if (!string.IsNullOrEmpty(Html.ValidationMessage("loginError").ToString()))
                        {
                            <div class="errorMessages">
                                @Html.ValidationMessage("loginError", "")
                            </div>
                        }
                    }

                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Login, new { @class = "col-sm-2 col-md-2 col-lg-2 control-label" })
                            <div class="col-sm-10 col-md-10 col-lg-10">
                                @Html.TextBoxFor(m => m.Login, new { @class = "form-control", autocomplete = "off" })
                                @Html.ValidationMessageFor(m => m.Login)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Haslo, new { @class = "col-sm-2 col-md-2 col-lg-2 control-label" })
                            <div class="col-sm-10 col-md-10 col-lg-10">
                                @Html.TextBoxFor(m => m.Haslo, new { @class = "form-control",  @type = "password" })
                                @Html.ValidationMessageFor(m => m.Haslo)
                            </div>
                        </div>
                    </div>
                    <div class="buttonFotterContainer ">
                        <div class="row">
                            <input type="submit" class="col-lg-12 col-md-12 col-sm-12 button button-blue" value="Zaloguj" />
                        </div>
                    </div>


                    
                </form>
            </div>
        </div>
    </div>

    <script>
        function ustawFocus()
        {
            document.getElementById("Login").focus();
        }
    </script>


</body>
</html>
